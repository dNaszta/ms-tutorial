version: "3"

services:
  frontend:
    build: 
      context: .
      dockerfile: dockers/frontend/Dockerfile
    ports: 
      - 8080:80
    networks:
      - ms-tut
    depends_on:
      - api-gateway

  api-gateway:
    build: 
      context: .
      dockerfile: dockers/api-gateway/Dockerfile
    command: ["./wait-for-it.sh", "user-db:3306", "--timeout=60", "--", "npm", "run", "start:prod"]
    environment:
      NODE_ENV: production
      # RDS_CONNECTION_TYPE: postgres
      RDS_CONNECTION_TYPE: mysql
      RDS_HOSTNAME: user-db
      # RDS_USERNAME: postgres
      RDS_USERNAME: root
      RDS_PASSWORD: example
      # RDS_PORT: 5432
      RDS_PORT: 3306
      RDS_DB_NAME: user
      JWT_SECRET: 666Ch4n61tZ3Cr3T
      CATALOG_HTTP: catalog-php
      BASKET_HTTP: basket-php
    ports: 
      - 3000:3000
    networks:
      - ms-tut
    depends_on:
      - user-db

  #user-db:
  #  image: postgres:12-alpine
  #  restart: always
  #  environment:
  #    POSTGRES_DB: user
  #    POSTGRES_PASSWORD: example
  #  ports:
  #    - 5432:5432
  #  networks:
  #    - ms-tut
  
  user-db:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: user
    ports:
      - 3306:3306
    networks:
      - ms-tut

  catalog-db:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: catalog
    ports:
      - 3310:3306
    networks:
      - ms-tut

  catalog-php:
    build:
      context: .
      dockerfile: dockers/php/Dockerfile
    volumes:
      - "./src/catalog:/srv/app"
    ports:
      - "8388:80"
    depends_on:
      - catalog-db
      - redis
    environment:
      DB_DATABASE: catalog
      DB_USERNAME: root
      DB_PASSWORD: example
      DB_HOST: catalog-db
      APP_URL: http://localhost:8388
      REDIS_CLIENT: predis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DATABASE: 1
    networks:
      - ms-tut

  basket-db:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: basket
    ports:
      - 3311:3306
    networks:
      - ms-tut

  redis:
    image: redis:5.0-alpine
    ports:
      - 6379:6379
    networks:
      - ms-tut

  basket-php:
    build:
      context: .
      dockerfile: dockers/php/Dockerfile
    volumes:
      - "./src/basket:/srv/app"
    ports:
      - "8488:80"
    depends_on:
      - basket-db
      - redis
    environment:
      DB_DATABASE: basket
      DB_USERNAME: root
      DB_PASSWORD: example
      DB_HOST: basket-db
      APP_URL: http://localhost:8488
      REDIS_CLIENT: predis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DATABASE: 0
    networks:
      - ms-tut

  basket-product-receiver:
    build:
      context: .
      dockerfile: dockers/python-receiver/Dockerfile
    environment:
      COLLECTION_URI: http://catalog-php/
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PS_CHANNEL: product_pubsub
      REDIS_CACHE_NAME: product
    volumes:
        - "./src/basket-product-receiver/src:/app"
    depends_on:
      - catalog-php
      - redis
    networks:
      - ms-tut

networks:
  ms-tut:
